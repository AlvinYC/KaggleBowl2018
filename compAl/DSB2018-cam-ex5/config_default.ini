; configure hyperparameters
[param]
model = unet
; possibility gating threshold
threshold = 0.5
learn_rate = 0.0001
cv_ratio = 0.1
; change seed if different shuffle cv required 
cv_seed = 666
weight_map = False
; get proper mini-width required for model input
; for example, 16 for 4 layers of max_pool (2**4)
gcd_depth = 16
; white-list of sub-category(s) for both train and valid, uncomment to enable filter
# category = Histology, Flouresence, Brightfield

; configure model variance
[unet]
; model input size
width = 256

[dcan]
; model input size
width = 256
; multitask threshold
threshold_sgmt = 0.5
threshold_edge = 0.5

[caunet]
; model input size
width = 256
; multitask threshold
threshold_sgmt = 0.5
threshold_edge = 0.5

[camunet]
; model input size
width = 256
; multitask threshold
threshold_sgmt = 0.5
threshold_edge = 0.5
threshold_mark = 0.5

[contour]
detect = False
exclusive = False
precise = False

; configure train.py behavior
[train]
n_epoch = 300
n_ckpt_epoch = 10
n_batch = 10
n_worker = 4
print_freq = 60
; a name for log description
log_name = myrun

; configure valid.py behavior
[valid]
; display figure position on screen
figure_pos_x = 200
figure_pos_y = 0
; set pred_orig_size to True, will not resize input but only add padding to fit model depth
pred_orig_size = False
; color equalize origin image on side-by-side visualization
view_color_equalize = True
; print verbose table
print_table = False

; data augmentation config
[pre]
; per RGB channels
mean = [0.5, 0.5, 0.5]
std  = [0.5, 0.5, 0.5]
label_to_binary = True
color_invert = False
color_jitter = True
elastic_distortion = True
color_equalize = False
min_scale = 0.5
max_scale = 1.5
fill_holes = True
min_object_size = 5

; post-process config
[post]
segmentation = True
seg_ratio = 0.5
seg_scale = 0.55
remove_objects = True
fill_holes = True
min_object_size = 5
edge_weight_factor = 2
policy = ws
